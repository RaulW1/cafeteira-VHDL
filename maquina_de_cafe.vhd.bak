---- MAQUINA DE CAFE ----

library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_signed.all;
use ieee.std_logic_arith.all;

entity maquina_de_cafe is
	port(
		-- entradas
		i_cafe 			 	: in STD_LOGIC;
		i_cafe_leite		: in STD_LOGIC;
		i_moca 			 	: in STD_LOGIC;
		i_tamanho		 	: in STD_LOGIC;
		i_acucar		 	: in STD_LOGIC;
		i_start			 	: in STD_LOGIC;
		i_clk			 	: in STD_LOGIC;
		i_reset			 	: in STD_LOGIC;
		
		-- saidas
		o_led_cafe		 	 	: out STD_LOGIC;
		o_led_cafe_leite		: out STD_LOGIC;
		o_led_moca		 	 	: out STD_LOGIC;
		o_led_tamanho		 	: out STD_LOGIC;
		o_led_acucar		 	: out STD_LOGIC;
		o_led_start		 	 	: out STD_LOGIC;
		o_led_end		 	 	: out STD_LOGIC
		
	);
end maquina_de_cafe;


architecture Behavorial of maquina_de_cafe is
	-- sinais internos
	-- sinais maquina de estados
	type w_tipo_estados is (st_idle, st_preparando, st_waiting, st_done); --st_repo, st_pronto);
	signal w_estado 				: w_tipo_estados;
	
	-- sinais de controle
	signal w_timer_en 					: STD_LOGIC;
	signal w_timer_sel					: STD_LOGIC;

	-- sinais leds
	-- signal o_led_cafe		 	 	: STD_LOGIC;
	-- signal o_led_cafe_leite			: STD_LOGIC;
	-- signal o_led_moca		 	 	: STD_LOGIC;
	-- signal o_led_tamanho		 		: STD_LOGIC;
	-- signal o_led_acucar		 		: STD_LOGIC;
	-- signal o_led_start		 		: STD_LOGIC;
	
	-- sinal de seleção (bebida, tamanho, açucar)
	-- signal w_selecao				: std_logic_vector(3 downto 0);
	-- signal w_cafe		 	 		: STD_LOGIC;
	-- signal w_cafe_leite				: STD_LOGIC;
	-- signal w_moca		 	 		: STD_LOGIC;
	
	-- componentes
	
begin
	--- MAQUINA DE ESTADOS ---
	process(i_clk, i_reset)
		-- variáveis reservatorios
		variable qtd_cafe 			: integer 	:= 10;
		variable qtd_leite 			: integer	:= 10;
		variable qtd_chocolate		: integer	:= 10;
		begin
			if (i_reset = '1') then
				w_estado <= st_idle;
			--end if;
			elsif rising_edge(i_clk) then
				case w_estado is
					--- IDLE ---
					when st_idle =>
						-- setar todas saidas para 'zero'
						o_led_cafe 			<= '0';
						o_led_cafe_leite 	<= '0';
						o_led_moca			<= '0';
						o_led_tamanho		<= '0';
						o_led_acucar		<= '0';
						o_led_start			<= '0';
						o_led_end			<= '0';
						w_timer_en			<= '0';
						-- w_selecao			<= "0000";
						
						if (i_cafe = '1' and i_cafe_leite = '0' and i_moca = '0') then -- cafe
							o_led_cafe <= '1';
							if (i_tamanho = '0' and i_acucar = '0') then -- pequeno sem açucar
								o_led_tamanho <= '0';
								o_led_acucar <= '0';
								--w_selecao <= "0000";
							elsif (i_tamanho = '0' and i_acucar = '1') then -- pequeno com açucar
								o_led_tamanho <= '0';
								o_led_acucar <= '1';
								--w_selecao <= "0001";
							elsif (i_tamanho = '1' and i_acucar = '0') then -- grande sem açucar
								o_led_tamanho <= '1';
								o_led_acucar <= '0';
								--w_selecao <= "0010";
							else -- grande com açucar
								o_led_tamanho <= '1';
								o_led_acucar <= '1';
								--w_selecao <= "0011";
							end if;
								
						elsif (i_cafe = '0' and i_cafe_leite = '1' and i_moca = '0') then -- cafe com leite
							o_led_cafe_leite <= '1';
							if (i_tamanho = '0' and i_acucar = '0') then -- pequeno sem açucar
								o_led_tamanho <= '0';
								o_led_acucar <= '0';
								--w_selecao <= "0100";
							elsif (i_tamanho = '0' and i_acucar = '1') then -- pequeno com açucar
								o_led_tamanho <= '0';
								o_led_acucar <= '1';
								--w_selecao <= "0101";
							elsif (i_tamanho = '1' and i_acucar = '0') then -- grande sem açucar
								o_led_tamanho <= '1';
								o_led_acucar <= '0';
								--w_selecao <= "0110";
							else -- grande com açucar
								o_led_tamanho <= '1';
								o_led_acucar <= '1';
								--w_selecao <= "0111";
							end if;
							
						elsif (i_cafe = '0' and i_cafe_leite = '0' and i_moca = '1') then -- mocca
							if (i_tamanho = '0' and i_acucar = '0') then -- pequeno sem açucar
								o_led_tamanho <= '0';
								o_led_acucar <= '0';
								--w_selecao <= "1000";
							elsif (i_tamanho = '0' and i_acucar = '1') then -- pequeno com açucar
								o_led_tamanho <= '0';
								o_led_acucar <= '1';
								--w_selecao <= "1001";
							elsif (i_tamanho = '1' and i_acucar = '0') then -- grande sem açucar
								o_led_tamanho <= '1';
								o_led_acucar <= '0';
								--w_selecao <= "1010";
							else -- grande com açucar
								o_led_tamanho <= '1';
								o_led_acucar <= '1';
								--w_selecao <= "1011";
							end if;
						end if;
						if (i_start = '1') then
							w_estado <= st_preparando; -- idle -> preparando
							o_led_start <= '1';
						else
							w_estado <= st_idle; -- idle -> idle
						end if;
					
					--- PREPARANDO ---
					when st_preparando =>
						-- CAFE --
						if (i_cafe = '1') then
							if (i_tamanho = '0') then
								-- setar timer p/ 5 sec
								w_timer_sel <= '0';
								-- descontar conteiners
							else
								-- setar timer p/ 10 sec
								w_timer_sel <= '1';
								-- descontar conteiners
							end if;
							if (i_acucar = '1') then
								-- descontar aucar
							end if;
							w_estado <= st_waiting;
						end if;

						-- CAFE C/ LEITE --
						if (i_cafe_leite = '1') then
							if (i_tamanho = '0') then
								-- setar timer p/ 5 sec
								w_timer_sel <= '0';
								-- descontar conteiners
							else
								-- setar timer p/ 10 sec
								w_timer_sel <= '1';
								-- descontar conteiners
							end if;
							if (i_acucar = '1') then
								-- descontar aucar
							end if;
							w_estado <= st_waiting;
						end if;

						-- MOCA --
						if (i_moca = '1') then
							if (i_tamanho = '0') then
								-- setar timer p/ 5 sec
								w_timer_sel <= '0';
								-- descontar conteiners
							else
								-- setar timer p/ 10 sec
								w_timer_sel <= '1';
								-- descontar conteiners
							end if;
							if (i_acucar = '1') then
								-- descontar aucar
							end if;
							w_estado <= st_waiting;
						end if;
					
					--- WAITING ---
					when st_waiting =>
						-- trocar de estado quando sinal do timer der ok
						-- trocar estado de waiting para done
					--- PRONTO ---
					when st_done =>
						-- 
						
					--- REPOSIÇÂO ---
					
				end case;
			end if;
		end process;

end Behavorial;
